<?xml version='1.0' encoding="UTF-8"?>

<!--********************************************************************
Copyright 2019 Oscar Levin

This file is part of PreTeXt Quickstart
*********************************************************************-->

<!-- Identify as a stylesheet -->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"
    xmlns:xml="http://www.w3.org/XML/1998/namespace"
    xmlns:exsl="http://exslt.org/common"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:str="http://exslt.org/strings"
    extension-element-prefixes="exsl date str"
    exclude-result-prefixes="xsl"
>

<xsl:output method="xml" encoding="UTF-8" indent="yes"/>




<!-- This is where I need to split up files based on chunk level -->
<!-- Also, probably change file names based on content? -->
<xsl:template match="/">
  <xsl:call-template name="bookinfo"/>
  <xsl:call-template name="frontmatter"/>
  <!-- Generate includable preambles as needed -->
  <!-- <xsl:if test="$everything='yes' or $activities='yes'">
    <xsl:call-template name="activities-preamble-file"/>
    <xsl:call-template name="activities-main-file" />
  </xsl:if>
  <xsl:if test="$everything='yes' or $notes='yes'">
    <xsl:call-template name="notes-preamble-file"/>
    <xsl:call-template name="notes-main-file" />
  </xsl:if> -->
  <xsl:apply-templates/>
</xsl:template>





<!-- ########################################### -->
<!-- Templates to generate files:                -->
<!-- ########################################### -->


<xsl:template match="book">
  <xsl:variable name="filename">
    <text>test/</text>
    <xsl:call-template name="filename"/>
  </xsl:variable>
  <exsl:document href="{$filename}" method="xml" indent="yes">
    <xsl:apply-templates/>
  </exsl:document>
</xsl:template>

<xsl:template match="chapter">
  <xsl:variable name="filename">
    <xsl:call-template name="filename"/>
  </xsl:variable>
  <exsl:document href="{$filename}" method="xml" indent="yes">
    <xsl:apply-templates/>
  </exsl:document>
</xsl:template>

<xsl:template match="section">
  <xsl:variable name="filename">
    <xsl:call-template name="filename"/>
  </xsl:variable>
  <exsl:document href="{$filename}" method="xml" indent="yes">
    <xsl:apply-templates/>
  </exsl:document>
</xsl:template>


<!-- To generate single file which includes everything: -->
<!-- <xsl:template name="activities-main-file">
  <exsl:document href="activities.tex" method="text" >
    <xsl:text>\documentclass{book}&#xa;&#xa;</xsl:text>
    <xsl:text>\input{activities-preamble.tex}&#xa;</xsl:text> -->
    <!-- <xsl:text>% Include a file allowing course customizations &#xa;</xsl:text> -->
    <!-- <xsl:text>\@input{../customize.tex}&#xa;</xsl:text> -->
    <!-- <xsl:text>\begin{document}&#xa;&#xa;</xsl:text>
    <xsl:apply-templates select="*" mode="activities"/>
    <xsl:text>\end{document}&#xa;</xsl:text>
  </exsl:document>
</xsl:template> -->

<xsl:template name="bookinfo">
  <exsl:document href="test/bookinfo.ptx" method="xml" encoding="UTF-8" indent="yes">
    <xsl:comment>
      This file was generated by pretext-quickstart based on information provided in an outline. 
      It will be included in your main file and will contain metadata about your book, macros for latex and image creation, plus any customizations you want to make (like renaming elements).
      You can now modify this document to match your needs as you continue with the document.
    </xsl:comment>
    <docinfo xmlns:xi="http://www.w3.org/2001/XInclude">
      
      <xsl:comment>The brandlogo element will display a linked image for the html version.  When you know this info, uncomment and provide the relevant details.
      </xsl:comment>
      <xsl:text disable-output-escaping="yes">&lt;!--</xsl:text>
        <brandlogo url="[bookurl]" source="images/cover.png"/>
      <xsl:text disable-output-escaping="yes">--&gt;&#xa;</xsl:text>
      <covers front="images/front.pdf" back="images/back.pdf"/>
      <document-id>[doc-id]</document-id>
      <macros>
        \newcommand{\N}{\mathbb N}
        \newcommand{\Z}{\mathbb Z}
      </macros>
      <latex-image-preamble>
        \usepackage{tikz, pgfplots}
        \usetikzlibrary{positioning,matrix,arrows}
        \usetikzlibrary{shapes,decorations,shadows,fadings,patterns}
        \usetikzlibrary{decorations.markings}
      </latex-image-preamble>
      <xsl:text disable-output-escaping="yes">&lt;!--</xsl:text>
        <rename element="investigation" xml:lang="en-US">Investigate!</rename>
      <xsl:text disable-output-escaping="yes">--&gt;</xsl:text>
      <cross-references text="type-global" />
    </docinfo>
  </exsl:document>
</xsl:template>


<xsl:template name="frontmatter">
  <exsl:document href="test/frontmatter.ptx" format="xml"  encoding="UTF-8" indent="yes">
    <xsl:comment>Generated by pretext-setup.xsl</xsl:comment>
    <frontmatter xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="frontmatter">
      <titlepage>
        <author>
          <personname>{author}</personname>
          <department>{department}</department>
          <institution>{institution}</institution>
        </author>
        <date><today/></date>
      </titlepage>
    
      <colophon>
        <xsl:comment>
        <xsl:text disable-output-escaping="yes">
        <website>
          <name><c>[website]</c></name>
          <address>[website]</address>
        </website>
        </xsl:text>
      </xsl:comment>
        <copyright>
          <year>[copyright-year]</year>
          <holder>[copyright-holder]</holder>
          <!-- <minilicense><image source="../images/by-sa.png" /></minilicense> -->
          <shortlicense>
            <!-- <image source="../images/by-sa.png" width="15%"/>  -->
            This work is licensed under the Creative Commons Attribution-ShareAlike 4.0 International License. To view a copy of this license, visit <url href="http://creativecommons.org/licenses/by-sa/4.0/">http://creativecommons.org/licenses/by-sa/4.0/</url>
          </shortlicense>
    
        </copyright>
    
      </colophon>
    
      <!-- <dedication>
        <p>
          For ...
        </p>
      </dedication> -->
    
      <!-- <acknowledgement>
        <p>
          This project would not have been possible without...
        </p>
      </acknowledgement> -->
    
      <!-- <preface xml:id="preface">
        <p>
          This project...
        </p>
      </preface> -->
      
      
    </frontmatter>

  </exsl:document>
</xsl:template>


<xsl:template name="filename">
  <xsl:choose>
    <xsl:when test="@xml:id">
      <xsl:value-of select="@xml:id"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:call-template name="div-shortname"/>
      <xsl:value-of select="translate(translate(title, '!', ''), '. ', '-')"/>
    </xsl:otherwise>
  </xsl:choose>
  <text>.ptx</text>
</xsl:template>

<xsl:template name="div-shortname">
  <xsl:choose>
    <xsl:when test="self::chapter">
      <text>ch-</text>
    </xsl:when>
    <xsl:when test="self::section">
      <text>sec-</text>
    </xsl:when>
  </xsl:choose>
</xsl:template>







<!-- To generate single file with preambles: -->

<xsl:template name="activities-preamble-file" >
  <exsl:document href="activities-preamble.tex" method="text" >
    <xsl:call-template name="activities-preamble"/>
  </exsl:document>
</xsl:template>

<xsl:template name="notes-preamble-file" >
  <exsl:document href="notes-preamble.tex" method="text" >
    <xsl:call-template name="notes-preamble"/>
  </exsl:document>
</xsl:template>









</xsl:stylesheet>